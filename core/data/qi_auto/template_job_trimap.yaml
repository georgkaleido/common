apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: qi-dataset-storage-[{DATE}]
spec:
  storageClassName: qi-class-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 30Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: removebg-trimap513-qi-auto-[{DATE}]
spec:
  replicas: 1
  selector:
    matchLabels:
      app: removebg-trimap513-qi-auto-[{DATE}]
  template:
    metadata:
      labels:
        app: removebg-trimap513-qi-auto-[{DATE}]
    spec:
      # Necessary to have enough shared memory
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
        - name: qi-dataset-storage
          persistentVolumeClaim:
            claimName: qi-dataset-storage-[{DATE}]
      containers:
        - name: removebg-trimap513
          image: eu.gcr.io/kaleido-train/trimap-qi-auto-trainer:v6
          imagePullPolicy: Always
          command: ["python", "/workspace/kaleido/removebg-train-trimap-cloud-qi.py"]
          args:
            - "--config=/workspace/kaleido/removebg/data/trimap.json"
            - "--danni_metadata_path=[{DANNI_METADATA_PATH}]"
            - "--name=[{NAME}]"
            - "--lr=0.00001"
            - "--initialize_with_prod_weights"
            - "--fresh"
          env:
            - name: WANDB_API_KEY
              valueFrom:
                secretKeyRef:
                  name: auth-secrets
                  key: wandb-token
            - name: GITHUB_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: auth-secrets
                  key: github-token
          # Ensure that the node has a GPU
          resources:
            limits:
              nvidia.com/gpu: 1
          # Necessary to have enough shared memory
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: qi-dataset-storage
              mountPath: "/workspace/kaleido/danni-data"
