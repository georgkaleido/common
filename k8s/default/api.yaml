apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api
  name: api
  namespace: default
spec:
  minReadySeconds: 30
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: api
  strategy:
    rollingUpdate:
      maxSurge: 35%
      maxUnavailable: 5%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: api
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      containers:
        - name: api
          image: eu.gcr.io/removebg-226919/kaleido-removebg-api:node14
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: api-config
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /health/liveness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 100
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 14
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /health/readiness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 13
          lifecycle:
            preStop:
              exec:
                command: ["/bin/bash", "-c", "echo 'Shutting down container api' && kill -s SIGTERM 1"]
          ports:
            - containerPort: 9443
              name: https
              protocol: TCP
          resources:
            requests:
              cpu: "1"
              memory: "4Gi"
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - name: rabbitmq
          image: rabbitmq:3.8.19
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: api-config
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/rabbitmq
              name: rabbitmq-storage
          lifecycle:
            preStop:
              exec:
                command: ["/bin/bash", "-c", "sleep 25 && echo 'Shutting down container rabbitmq'"]
        - args:
          envFrom:
            - configMapRef:
                name: api-config
          image: eu.gcr.io/removebg-226919/removebg-core:1.2.4-pt20.11-cc75
          imagePullPolicy: Always
          name: core
          resources:
            limits:
              nvidia.com/gpu: "1"
            requests:
              cpu: "2"
              memory: "10Gi"
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - "cd /app && ./liveness.sh"
            initialDelaySeconds: 60
            periodSeconds: 5
          lifecycle:
            preStop:
              exec:
                command: ["/bin/bash", "-c", "sleep 25 && echo 'Shutting down container core'"]
      dnsPolicy: ClusterFirst
      nodeSelector:
        cloud.google.com/gke-accelerator: nvidia-tesla-t4
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 39
      volumes:
        - emptyDir: {}
          name: rabbitmq-storage
