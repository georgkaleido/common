apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api-staging
  name: api-staging
  namespace: default
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: api-staging
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: api-staging
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      containers:

        - name: api
          image: eu.gcr.io/removebg-226919/removebg-api
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: api-config-staging
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /app/cloud-application-credentials.json
          volumeMounts:
            - name: google-application-credentials
              mountPath: /app/cloud-application-credentials.json
              subPath: GOOGLE_APPLICATION_CREDENTIALS
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /health/liveness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 14
          readinessProbe:
            failureThreshold: 2
            httpGet:
              path: /health/readiness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 13
          lifecycle:
            preStop:
              exec:
                command: ["/bin/bash", "-c", "echo 'Shutting down container api' && kill -s SIGTERM 1"]
          ports:
            - containerPort: 9443
              name: https
              protocol: TCP
          resources:
            requests:
              cpu: "0.1"
              memory: "4Gi"
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File

        - name: rabbitmq
          image: rabbitmq:3.8.19
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: api-config-staging
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/rabbitmq
              name: rabbitmq-storage
          lifecycle:
            preStop:
              exec:
                command: ["/bin/bash", "-c", "sleep 25 && echo 'Shutting down container rabbitmq'"]

        - name: core
          image: eu.gcr.io/removebg-226919/removebg-core
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: api-config-staging
          resources:
            limits:
              nvidia.com/gpu: "1"
            requests:
              cpu: "2"
              memory: "10Gi"
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - "cd /app && ./liveness.sh"
            initialDelaySeconds: 60
            periodSeconds: 5
          lifecycle:
            preStop:
              exec:
                command: ["/bin/bash", "-c", "sleep 25 && echo 'Shutting down container core'"]

      dnsPolicy: ClusterFirst
      nodeSelector:
        cloud.google.com/gke-accelerator: nvidia-tesla-t4
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 39
      volumes:
        - name: rabbitmq-storage
          emptyDir: {}
        - name: google-application-credentials
          configMap:
            name: api-config-staging
